<?xml version="1.0"?>

<!-- The MONITOR configuration file. -->
<monitor>
	<!-- 
		GENFERAL SETTINGS 
		Settings applicable to the overall environment of this Monitor instance.
	-->
	<general>
		<!--
			ASSOCIATE ONCALL SCHEDULE
			Value contains oncall start date and end date in format YYYMMDD.
		-->
		<schedule>

			<period>
				<start_oncall>20100101</start_oncall>
				<end_oncall>20151231</end_oncall>
				<victim>JoeMps</victim>
			</period>
		</schedule>


		<!--
			ASSOCIATE INFORMATION
			SMTP pager and email addresses.
		-->
		<associate>
			<name>JoeMps</name>
			<pager>6086575663@archwireless.net:6086575662@archwireless.net</pager>
			<email>MPS@uscellular.com</email>
		</associate>

		<!--
			ROOT PATH
			Physical address of the root project directory.
			This is where all the check executables are located.
		-->
		<SERVLET>
			<TEMPLATE file="ini/Mps_Monitor.html" key="default"/>
			<TEMPLATE file="ini/ACPA2.html" key="ACPA2"/>
			<TEMPLATE file="ini/ACPA3.html" key="ACPA3"/>
			<TEMPLATE file="ini/OncallM01.html" key="ONCALLM01"/>
			<TEMPLATE file="ini/OncallM02.html" key="ONCALLM02"/>
			<TEMPLATE file="ini/OncallM03.html" key="ONCALLM03"/>
			<TEMPLATE file="ini/OncallM04.html" key="ONCALLM04"/>
			<TEMPLATE file="ini/OncallM05.html" key="ONCALLM05"/>
			<TEMPLATE file="ini/OncallM06.html" key="ONCALLM06"/>
			<TEMPLATE file="ini/Oncall3M01.html" key="ONCALL3M01"/>
			<TEMPLATE file="ini/Oncall3M02.html" key="ONCALL3M02"/>
			<TEMPLATE file="ini/Oncall3M03.html" key="ONCALL3M03"/>
			<TEMPLATE file="ini/Oncall3M04.html" key="ONCALL3M04"/>
			<TEMPLATE file="ini/Oncall3M05.html" key="ONCALL3M05"/>
			<TEMPLATE file="ini/Oncall3M06.html" key="ONCALL3M06"/>
		</SERVLET>
	</general>

	<!--
		MARKET
		Settings specific to each market.            
	-->
	<MARKET>
		<!--
			These sections contain input parameters for each individual
			monitor check.
			To turn off any of the checks, set its 'disable' flag to 'Yes', 'y', 
			or any other case variation thereof.
		-->
		<M01 hostname="m01usg1.uscc.com" port="8999" StartHour="7">
			<TP_Summary>
				<disable>No</disable>
				<minutes>5</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/TP_Summary.pl</executable>
				<params title="TP_Summary" market="M01" sql_query="throughput.sql" SqlLib="sql/" Log="log/" seconds_span="3600" sum_dbuser="calldumptest" sum_dbpass="calldumptest" sum_dbsid="sharedev"/>
				<repage>1</repage>
			</TP_Summary>
			<!--
				SwitchBehind
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					Parameters passed to the executable.
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M01" sql_query="switch_behind.sql" ignore_list="QIS,AAA1,PMSG1,PTX1,SMS,ALU" threshold="8" MpsLib="" SqlLib="sql/" Log="log/" title="M01:SwitchBehind"/>
				<!-- Minutes of hour on which the collector runs the executable -->
				<collector_interval>5,45</collector_interval>
				<repage>1</repage>
			</SwitchBehind>

			<!--
				ProgremBehind
				This check is responsible for paging the oncall person when 
				a program is behind in processing by a threshold number of records.
			-->
			<ProgramBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/ProgramBehind.pl</executable>
				<params market="M01" sql_query="program_behind.sql" threshold="2000000" MpsLib="" SqlLib="sql/" Log="log/" title="M01:ProgramBehind"/>
				<collector_interval>6,46</collector_interval>
				<repage>1</repage>
			</ProgramBehind>

			<!--
				MissingBlock
				This check is responsible for paging the oncall person when 
				missing blocks of data are detected.
			-->
			<MissingBlock>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MissingBlock.pl</executable>
				<params market="M01" sql_query="missing_block.sql" switch_query="voice_switches.sql" from_hrs_ago="72" to_hrs_ago="1" threshold="100" MpsLib="" ignore_list="CLRK" SqlLib="sql/" Log="log/" title="M01:MissingBlock"/>
				<collector_interval>2,47</collector_interval>
				<repage>0</repage>
			</MissingBlock>

			<!--
				StuckFile
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<StuckFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/StuckFile.pl</executable>
				<params market="M01" sql_query="stuck_file.sql" threshold="4" MpsLib="" SqlLib="sql/" Log="log/" title="M01:StuckFile"/>
				<collector_interval>3,48</collector_interval>
				<repage>1</repage>
			</StuckFile>

			<!--
				MafMonitor
				This check is responsible for paging the oncall person when 
				the Maf Monitor ceases processing.
			-->
			<MafMonitor>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>4-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafMonitor.pl</executable>
				<params market="M01" host="localhost" maf_port="/cares/mpsm01b/m01/projs/up/physical/switch/MafPort.txt" MpsLib="" SqlLib="sql/" Log="log/" title="M01:MafMonitor"/>
				<collector_interval>4,49</collector_interval>
				<repage>1</repage>
			</MafMonitor>

			<!--
				MafAbends
				This check is responsible for paging the oncall person when 
				the number of abended files exceeds an allowed threshold.
			-->
			<MafAbends>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>1-5</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M01" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M01:MafAbends"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafAbends>
			<MafAbendsun>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours>
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>0,6</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M01" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M01:MafAbends"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafAbendsun>


			<!--
				RaterStatus
				This check is responsible for paging the oncall person when 
				any raters go down.
			-->
			<RaterStatus>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/RaterStatus.pl</executable>
				<params market="M01" night_start="4" night_end="13" sql_day="raters_day.sql" sql_night="raters_night.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M01:RaterStatus"/>
				<collector_interval>1,31,46,56</collector_interval>
				<repage>1</repage>
			</RaterStatus>

			<!--
				InfranetTransfer
				This check is responsible for paging the oncall person when 
				a data file transfer from CARES to Infranet fails.
			-->
			<InfraTransfer>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-21</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfraTransfer.pl</executable>
				<params market="M01" from_hrs_ago="48" to_hrs_ago="2" cares_query="cares.sql" infra_query="infra.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M01:Infranet_Transfer"/>
				<collector_interval>10,50</collector_interval>
				<repage>1</repage>
			</InfraTransfer>

			<!--
				OutcollectCiber
				This check is responsible for paging the oncall person if 
				Incollect Ciber files have not been received from the ClearingHouse
				in <params threshold> amount of time.
			-->
			<IncollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M01" threshold="30" Log="log/" title="M01:Incollect_Ciber" phys_dir="/cares/mpsm01b/m01/projs/up/physical/switch/gte/"/>
				<executable>Monitor/IncollectCiber.pl</executable>
				<collector_interval>3,48</collector_interval>
				<repage>0</repage>
			</IncollectCiber>

			<!--
				OutcollectCiber
				This check is responsible for paging the oncall person if 
				Outcollect Ciber files have not been sent to the ClearingHouse
				in <params threshold> amount of time.
			-->
			<OutcollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<executable>Monitor/OutcollectCiber.pl</executable>
				<params market="M01" threshold="24" alt_thresh="48" MpsLib="" SqlLib="sql/" Log="log/" title="M01:Outcollect_Ciber" phys_dir="/cares/mpsm01b/m01/projs/up/physical/switch/gteout/"/>
				<collector_interval>4,49</collector_interval>
				<repage>0</repage>
			</OutcollectCiber>

			<MissingDataFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/MissingDataFile.pl</executable>
				<params market="M01" sql_query="missing_file.sql" switch_query="data_switches.sql" from_hrs_ago="72" to_hrs_ago="1" max_blocks="10000" ignore_list="BROO,TULS,MANH,GRIS,QIS,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMS,ALU" MpsLib="" SqlLib="sql/" Log="log/" title="M01:MissingDataFile"/>
				<collector_interval>0,45</collector_interval>
				<repage>0</repage>
			</MissingDataFile>

			<WebAcpa2>
				<disable>yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa2.pl</executable>
				<params title="ACPA2:M01"/>
				<repage>1</repage>
			</WebAcpa2>

			<WebAcpa3>
				<disable>yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/acpa3.pl</executable>
				<params title="ACPA3:M01"/>
				<repage>1</repage>
			</WebAcpa3>

			<WebListenGuideRate>
				<disable>yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>1,6,11,16,21,26,31,36,41,46,51,56</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>
					Monitor/WebListenerGuidersRaters.pl
				</executable>
				<params title="WebListenGuideRate:M01"/>
				<repage>1</repage>
			</WebListenGuideRate>

			<WebFreeMinUsgErrs>
				<disable>yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>2</minutes>
                                <usehours>yes</usehours>
				<hours>0,2,4,6,8,10,12,14,16,18,20,22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>
					Monitor/WebRollFreeMinutesUsageErrors.pl
				</executable>
				<params title="WebFreeMinUsgErrs:M01"/>
				<repage>1</repage>
			</WebFreeMinUsgErrs>

			<WebSpaceMb>
				<disable>yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>7</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/WebSpaceMb.pl</executable>
				<params title="WebSpaceMb:M01"/>
				<repage>1</repage>
			</WebSpaceMb>

			<WebStuckFileProc>
				<disable>yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>18,48</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/WebStuckFileProc.pl</executable>
				<params ignore_list="BROO,TULS,MANH,GRIS,QIS,CLRK,SMIT,WILM,LYNC,MABS,PIKE,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,PMSS1,SMS" title="M01:WebStuckFileProc"/>
				<repage>1</repage>
			</WebStuckFileProc>
		</M01>

		<I01 hostname="m01inf1.uscc.com" port="8999" StartHour="7">
			<InfEventLoad>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,30</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfEventLoad.pl</executable>
				<params market="pinm01" MpsLib="" SqlLib="sql/" Log="log/" title="I01:IELEventLoad"/>
				<repage>1</repage>
			</InfEventLoad>
		</I01>

		<I02 hostname="m02inf1.uscc.com" port="8998" StartHour="6">
			<InfEventLoad>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,30</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfEventLoad.pl</executable>
				<params market="pinm02" MpsLib="" SqlLib="sql/" Log="log/" title="I02:IELEventLoad"/>
				<repage>1</repage>
			</InfEventLoad>
		</I02>

		<I03 hostname="m03inf1.uscc.com" port="8999" StartHour="6">
			<InfEventLoad>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,30</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfEventLoad.pl</executable>
				<params market="pinm03" MpsLib="" SqlLib="sql/" Log="log/" title="I03:IELEventLoad"/>
				<repage>1</repage>
			</InfEventLoad>
		</I03>

		<I04 hostname="m04inf1.uscc.com" port="8999" StartHour="7">
			<InfEventLoad>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,30</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfEventLoad.pl</executable>
				<params market="pinm04" MpsLib="" SqlLib="sql/" Log="log/" title="I04:IELEventLoad"/>
				<repage>1</repage>
			</InfEventLoad>
		</I04>


		<I05 hostname="m05inf1.uscc.com" port="8999" StartHour="4">
			<InfEventLoad>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,30</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfEventLoad.pl</executable>
				<params market="pinm05" MpsLib="" SqlLib="sql/" Log="log/" title="I05:IELEventLoad"/>
				<repage>1</repage>
			</InfEventLoad>
		</I05>


		<I06 hostname="m06inf1.uscc.com" port="8999" StartHour="6">
			<InfEventLoad>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,30</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/InfEventLoad.pl</executable>
				<params market="pinm06" MpsLib="" SqlLib="sql/" Log="log/" title="I06:IELEventLoad"/>
				<repage>1</repage>
			</InfEventLoad>
		</I06>

		<M02 hostname="m02usg1.uscc.com" port="8999" StartHour="6">
			<TP_Summary>
				<disable>No</disable>
				<minutes>5</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/TP_Summary.pl</executable>
				<params title="TP_Summary" market="M02" sql_query="throughput.sql" SqlLib="sql/" Log="log/" seconds_span="3600" sum_dbuser="calldumptest" sum_dbpass="calldumptest" sum_dbsid="sharedev"/>
				<repage>1</repage>
			</TP_Summary>
			
			<!--
				SwitchBehind
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M02" sql_query="switch_behind.sql" ignore_list="QIS,AAA1,PMSG1,PTX1,SMS,MOT" threshold="8" MpsLib="" SqlLib="sql/" Log="log/" title="M02:SwitchBehind"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</SwitchBehind>

			<!--
				ProgremBehind
				This check is responsible for paging the oncall person when 
				a program is behind in processing by a threshold number of records.
			-->
			<ProgramBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/ProgramBehind.pl</executable>
				<params market="M02" sql_query="program_behind.sql" threshold="2000000" MpsLib="" SqlLib="sql/" Log="log/" title="M02:ProgramBehind"/>
				<collector_interval>1,46</collector_interval>
				<repage>1</repage>
			</ProgramBehind>
			<!--
				MissingBlock
				This check is responsible for paging the oncall person when 
				missing blocks of data are detected.
			-->
			<MissingBlock>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/MissingBlock.pl</executable>
				<params market="M02" sql_query="missing_block.sql" switch_query="voice_switches.sql" from_hrs_ago="72" to_hrs_ago="1" threshold="100" MpsLib="" SqlLib="sql/" Log="log/" title="M02:MissingBlock"/>
				<collector_interval>2,47</collector_interval>
				<repage>0</repage>
			</MissingBlock>

			<!--
				StuckFile
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<StuckFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/StuckFile.pl</executable>
				<params market="M02" sql_query="stuck_file.sql" threshold="4" MpsLib="" SqlLib="sql/" Log="log/" title="M02:StuckFile"/>
				<collector_interval>3,48</collector_interval>
				<repage>1</repage>
			</StuckFile>

			<!--
				MafMonitor
				This check is responsible for paging the oncall person when 
				the Maf Monitor ceases processing.
			-->
			<MafMonitor>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>4-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<params market="M02" host="localhost" maf_port="/cares/mpsm02b/m02/projs/up/physical/switch/MafPort.txt" MpsLib="" SqlLib="sql/" Log="log/" title="M02:MafMonitor"/>
				<executable>Monitor/MafMonitor.pl</executable>
				<collector_interval>4,49</collector_interval>
				<repage>1</repage>
			</MafMonitor>

			<!--
				MafAbends
				This check is responsible for paging the oncall person when 
				the number of abended files exceeds an allowed threshold.
			-->
			<MafAbends>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>1-5</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M02" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M02:MafAbends"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafAbends>

			<MafAbendsun>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours>
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,6</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M02" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M02:MafAbends"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafAbendsun>

			<!--
				RaterStatus
				This check is responsible for paging the oncall person when 
				any raters go down.
			-->
			<RaterStatus>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/RaterStatus.pl</executable>
				<params market="M02" night_start="4" night_end="13" sql_day="raters_day.sql" sql_night="raters_night.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M02:RaterStatus"/>
				<collector_interval>1,46</collector_interval>
				<repage>1</repage>
			</RaterStatus>

			<!--
				InfranetTransfer
				This check is responsible for paging the oncall person when 
				a data file transfer from CARES to Infranet fails.
			-->
			<InfraTransfer>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M02" from_hrs_ago="48" to_hrs_ago="2" cares_query="cares.sql" infra_query="infra.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M02:Infranet_Transfer"/>
				<executable>Monitor/InfraTransfer.pl</executable>
				<collector_interval>2,47</collector_interval>
				<repage>1</repage>
			</InfraTransfer>

			<IncollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M02" threshold="30" Log="log/" title="M02:Incollect_Ciber" phys_dir="/cares/mpsm02b/m02/projs/up/physical/switch/gte/"/>
				<executable>Monitor/IncollectCiber.pl</executable>
				<collector_interval>3,48</collector_interval>
				<repage>0</repage>
			</IncollectCiber>

			<OutcollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M02" threshold="24" alt_thresh="48" MpsLib="" SqlLib="sql/" Log="log/" title="M02:Outcollect_Ciber" phys_dir="/cares/mpsm02b/m02/projs/up/physical/switch/gteout/"/>
				<executable>Monitor/OutcollectCiber.pl</executable>
				<collector_interval>4,49</collector_interval>
				<repage>0</repage>
			</OutcollectCiber>


			<MissingDataFile>
				<disable>No</disable>
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingDataFile.pl</executable>
				<params market="M02" sql_query="missing_file.sql" switch_query="data_switches.sql" from_hrs_ago="72" to_hrs_ago="1" max_blocks="10000" ignore_list="BROO,TULS,MANH,GRIS,QIS,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMS,MOT" MpsLib="" SqlLib="sql/" Log="log/" title="M02:MissingDataFile"/>
				<collector_interval>0,45</collector_interval>
				<repage>0</repage>
			</MissingDataFile>

			<WebAcpa2>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa2.pl</executable>
				<params title="ACPA2:M02"/>
				<repage>1</repage>
			</WebAcpa2>

			<WebAcpa3>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa3.pl</executable>
				<params title="ACPA3:M02"/>
				<repage>1</repage>
			</WebAcpa3>

			<WebListenGuideRate>
				<disable>yes</disable>
				<minutes>1,6,11,16,21,26,31,36,41,46,51,56</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebListenerGuidersRaters.pl
				</executable>
				<params title="WebListenGuideRate:M02"/>
				<repage>1</repage>
			</WebListenGuideRate>

			<WebFreeMinUsgErrs>
				<disable>yes</disable>
                                <usehours>yes</usehours>
				<minutes>7</minutes>
				<hours>0,2,4,6,8,10,12,14,16,18,20,22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebRollFreeMinutesUsageErrors.pl
				</executable>
				<params title="WebFreeMinUsgErrs:M02"/>
				<repage>1</repage>
			</WebFreeMinUsgErrs>

			<WebSpaceMb>
				<disable>yes</disable>
				<minutes>2,32</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebSpaceMb.pl</executable>
				<params title="WebSpaceMb:M02"/>
				<repage>1</repage>
			</WebSpaceMb>

			<WebStuckFileProc>
				<disable>yes</disable>
				<minutes>3,48</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebStuckFileProc.pl</executable>
				<params ignore_list="BROO,TULS,MANH,GRIS,QIS,ROCK,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,PMSS2,AAAS2,PTS2,SMS" title="M02:WebStuckFileProc"/>
				<repage>1</repage>
			</WebStuckFileProc>
		</M02>


		<M03 hostname="m03usg1.uscc.com" port="8999" StartHour="6"><TP_Summary>
				<disable>No</disable>
				<minutes>5</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/TP_Summary.pl</executable>
				<params title="TP_Summary" market="M03" sql_query="throughput.sql" SqlLib="sql/" Log="log/" seconds_span="3600" sum_dbuser="calldumptest" sum_dbpass="calldumptest" sum_dbsid="sharedev"/>
				<repage>1</repage>
			</TP_Summary>
			<!--
				SwitchBehind
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M03" sql_query="switch_behind.sql" ignore_list="QIS,AAA1,PMSG1,PTX1,SMS,MOT" threshold="8" MpsLib="" SqlLib="sql/" Log="log/" title="M03:SwitchBehind"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</SwitchBehind>

			<!--
				ProgremBehind
				This check is responsible for paging the oncall person when 
				a program is behind in processing by a threshold number of records.
			-->
			<ProgramBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<executable>Monitor/ProgramBehind.pl</executable>
				<params market="M03" sql_query="program_behind.sql" threshold="2000000" MpsLib="" SqlLib="sql/" Log="log/" title="M03:ProgramBehind"/>
				<collector_interval>1,46</collector_interval>
				<repage>1</repage>
			</ProgramBehind>
			<!--
				MissingBlock
				This check is responsible for paging the oncall person when 
				missing blocks of data are detected.
			-->
			<MissingBlock>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingBlock.pl</executable>
				<params market="M03" sql_query="missing_block.sql" switch_query="voice_switches.sql" from_hrs_ago="72" to_hrs_ago="1" threshold="100" MpsLib="" SqlLib="sql/" Log="log/" title="M03:MissingBlock"/>
				<collector_interval>2,47</collector_interval>
				<repage>0</repage>
			</MissingBlock>

			<!--
				StuckFile
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<StuckFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/StuckFile.pl</executable>
				<params market="M03" sql_query="stuck_file.sql" threshold="4" MpsLib="" SqlLib="sql/" Log="log/" title="M03:StuckFile"/>
				<collector_interval>3,48</collector_interval>
				<repage>1</repage>
			</StuckFile>
			<!--
				MafMonitor
				This check is responsible for paging the oncall person when 
				the Maf Monitor ceases processing.
			-->
			<MafMonitor>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>4-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>

				<params market="M03" host="localhost" maf_port="/cares/mpsm03b/m03/projs/up/physical/switch/MafPort.txt" MpsLib="" SqlLib="sql/" Log="log/" title="M03:MafMonitor"/>
				<executable>Monitor/MafMonitor.pl</executable>
				<collector_interval>4,49</collector_interval>
				<repage>1</repage>
			</MafMonitor>

			<!--
				MafAbends
				This check is responsible for paging the oncall person when 
				the number of abended files exceeds an allowed threshold.
			-->
			<MafAbends>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>1-5</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M03" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M03:MafAbends"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafAbends>

			<MafAbendsun>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours>
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,6</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M03" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M03:MafAbends"/>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafAbendsun>

			<!--
				RaterStatus
				This check is responsible for paging the oncall person when 
				any raters go down.
			-->
			<RaterStatus>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/RaterStatus.pl</executable>
				<params market="M03" night_start="4" night_end="13" sql_day="raters_day.sql" sql_night="raters_night.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M03:RaterStatus"/>
				<collector_interval>1,31,46,56</collector_interval>
				<repage>1</repage>
			</RaterStatus>
			<!--
				InfranetTransfer
				This check is responsible for paging the oncall person when 
				a data file transfer from CARES to Infranet fails.
			-->
			<InfraTransfer>
				<disable>No</disable>
				<minutes>0</minutes>
				<hours>7-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M03" from_hrs_ago="48" to_hrs_ago="2" cares_query="cares.sql" infra_query="infra.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M03:Infranet_Transfer"/>
				<executable>Monitor/InfraTransfer.pl</executable>
				<collector_interval>2,47</collector_interval>
				<repage>1</repage>
			</InfraTransfer>

			<IncollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M03" threshold="30" Log="log/" title="M03:IncollectCiber" phys_dir="/cares/mpsm03b/m03/projs/up/physical/switch/gte/"/>
				<executable>Monitor/IncollectCiber.pl</executable>
				<collector_interval>3,48</collector_interval>
				<repage>0</repage>
			</IncollectCiber>

			<OutcollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M03" threshold="24" alt_thresh="48" MpsLib="" SqlLib="sql/" Log="log/" title="M03:Outcollect_Ciber" phys_dir="/cares/mpsm03b/m03/projs/up/physical/switch/gteout/"/>
				<executable>Monitor/OutcollectCiber.pl</executable>
				<collector_interval>4,49</collector_interval>
				<repage>0</repage>
			</OutcollectCiber>

			<MissingDataFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingDataFile.pl</executable>
				<params market="M03" sql_query="missing_file.sql" switch_query="data_switches.sql" from_hrs_ago="72" to_hrs_ago="1" max_blocks="10000" ignore_list="BROO,TULS,MANH,GRIS,QIS,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMSC,MOT" MpsLib="" SqlLib="sql/" Log="log/" title="M03:MissingDataFile"/>
				<collector_interval>0,45</collector_interval>
				<repage>0</repage>
			</MissingDataFile>


			<WebAcpa2>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa2.pl</executable>
				<params title="ACPA2:M03"/>
				<repage>1</repage>
			</WebAcpa2>
			<WebAcpa3>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa3.pl</executable>
				<params title="ACPA3:M03"/>
				<repage>1</repage>
			</WebAcpa3>
			<WebListenGuideRate>
				<disable>yes</disable>
				<minutes>1,6,11,16,21,26,31,36,41,46,51,56</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebListenerGuidersRaters.pl
				</executable>
				<params title="WebListenGuideRate:M03"/>
				<repage>1</repage>
			</WebListenGuideRate>
			<WebFreeMinUsgErrs>
				<disable>yes</disable>
                                <usehours>yes</usehours>
				<minutes>2</minutes>
				<hours>0,2,4,6,8,10,12,14,16,18,20,22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebRollFreeMinutesUsageErrors.pl
				</executable>
				<params title="WebFreeMinUsgErrs:M03"/>
				<repage>1</repage>
			</WebFreeMinUsgErrs>
			<WebSpaceMb>
				<disable>yes</disable>
				<minutes>7</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebSpaceMb.pl</executable>
				<params title="WebSpaceMb:M03"/>
				<repage>1</repage>
			</WebSpaceMb>
			<WebStuckFileProc>
				<disable>yes</disable>
				<minutes>4,34</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebStuckFileProc.pl</executable>
				<params ignore_list="BROO,TULS,MANH,GRIS,QIS,IOWA,DAVE,CDRP,WTRL,LOGN,AUGS,MANC,DESM,PEOR,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMSC,SMS" title="M03:WebStuckFileProc"/>
				<repage>1</repage>
			</WebStuckFileProc>
		</M03>



		<M04 hostname="m04usg1.uscc.com" port="8999" StartHour="7"><TP_Summary>
				<disable>No</disable>
				<minutes>5</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/TP_Summary.pl</executable>
				<params title="TP_Summary" market="M04" sql_query="throughput.sql" SqlLib="sql/" Log="log/" seconds_span="3600" sum_dbuser="calldumptest" sum_dbpass="calldumptest" sum_dbsid="sharedev"/>
				<repage>1</repage>
			</TP_Summary>
			<!--
				SwitchBehind
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M04" sql_query="switch_behind.sql" ignore_list="QIS,AAA1,PMSG1,PTX1,SMS,ALU" threshold="8" MpsLib="" SqlLib="sql/" Log="log/" title="M04:SwitchBehind"/>
				<collector_interval>1,46</collector_interval>
				<repage>1</repage>
			</SwitchBehind>

			<!--
				ProgremBehind
				This check is responsible for paging the oncall person when 
				a program is behind in processing by a threshold number of records.
			-->
			<ProgramBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/ProgramBehind.pl</executable>
				<params market="M04" sql_query="program_behind.sql" threshold="5000000" MpsLib="" SqlLib="sql/" Log="log/" title="M04:ProgramBehind"/>
				<collector_interval>2,47</collector_interval>
				<repage>1</repage>
			</ProgramBehind>
			<!--
				MissingBlock
				This check is responsible for paging the oncall person when 
				missing blocks of data are detected.
			-->
			<MissingBlock>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingBlock.pl</executable>
				<params market="M04" sql_query="missing_block.sql" switch_query="voice_switches.sql" from_hrs_ago="72" to_hrs_ago="1" threshold="100" MpsLib="" SqlLib="sql/" Log="log/" title="M04:MissingBlock"/>
				<collector_interval>3,48</collector_interval>
				<repage>0</repage>
			</MissingBlock>

			<!--
				StuckFile
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<StuckFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/StuckFile.pl</executable>
				<params market="M04" sql_query="stuck_file.sql" threshold="4" MpsLib="" SqlLib="sql/" Log="log/" title="M04:StuckFile"/>
				<collector_interval>4,49</collector_interval>
				<repage>1</repage>
			</StuckFile>
			<!--
				MafMonitor
				This check is responsible for paging the oncall person when 
				the Maf Monitor ceases processing.
			-->
			<MafMonitor>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>4-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M04" host="localhost" maf_port="/cares/mpsm04b/m04/projs/up/physical/switch/MafPort.txt" MpsLib="" SqlLib="sql/" Log="log/" title="M04:MafMonitor"/>
				<executable>Monitor/MafMonitor.pl</executable>
				<collector_interval>0,45</collector_interval>
				<repage>1</repage>
			</MafMonitor>

			<!--
				MafAbends
				This check is responsible for paging the oncall person when 
				the number of abended files exceeds an allowed threshold.
			-->
			<MafAbends>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>1-5</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M04" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M04:MafAbends"/>
				<collector_interval>1,31</collector_interval>
				<repage>1</repage>
			</MafAbends>

			<MafAbendsun>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours>
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>0,6</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M04" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M04:MafAbends"/>
				<collector_interval>1,31</collector_interval>
				<repage>1</repage>
			</MafAbendsun>
			<!--
				RaterStatus
				This check is responsible for paging the oncall person when 
				any raters go down.
			-->
			<RaterStatus>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/RaterStatus.pl</executable>
				<params market="M04" night_start="4" night_end="13" sql_day="raters_day.sql" sql_night="raters_night.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M04:RaterStatus"/>
				<collector_interval>2,32,47,57</collector_interval>
				<repage>1</repage>
			</RaterStatus>
			<!--
				InfranetTransfer
				This check is responsible for paging the oncall person when 
				a data file transfer from CARES to Infranet fails.
			-->
			<InfraTransfer>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-21</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M04" from_hrs_ago="48" to_hrs_ago="2" cares_query="cares.sql" infra_query="infra.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M04:Infranet_Transfer"/>
				<executable>Monitor/InfraTransfer.pl</executable>
				<collector_interval>3,33</collector_interval>
				<repage>1</repage>
			</InfraTransfer>

			<!--
				IntraMarketTransfer
				This check is responsible for paging the oncall person when 
				a file transfer from one market to another fails.
			-->
			<IntraMarketTransfer>
				<disable>Yes</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0,15,30,45</minutes>
				<hours>7-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/IntraMarketTransfer.pl</executable>
				<params market="M04" Remote_market="M03" from_hrs_ago="72" to_hrs_ago="4" local_query="local.sql" remote_query="remote.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M04:IntraMarketTransfer"/>
				<collector_interval>4,34</collector_interval>
				<repage>1</repage>
			</IntraMarketTransfer>

			<IncollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M04" threshold="30" Log="log/" title="M04:IncollectCiber" phys_dir="/cares/mpsm04b/m04/projs/up/physical/switch/gte/"/>
				<executable>Monitor/IncollectCiber.pl</executable>
				<collector_interval>0,30</collector_interval>
				<repage>0</repage>
			</IncollectCiber>

			<OutcollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M04" threshold="24" alt_thresh="48" MpsLib="" SqlLib="sql/" Log="log/" title="M04:Outcollect_Ciber" phys_dir="/cares/mpsm04b/m04/projs/up/physical/switch/gteout/"/>
				<executable>Monitor/OutcollectCiber.pl</executable>
				<collector_interval>1,31</collector_interval>
				<repage>0</repage>
			</OutcollectCiber>
			<MissingDataFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>8-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingDataFile.pl</executable>
				<params market="M04" sql_query="missing_file.sql" switch_query="data_switches.sql" from_hrs_ago="72" to_hrs_ago="1" max_blocks="10000" ignore_list="BROO,TULS,MANH,GRIS,QIS,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,ALU" MpsLib="" SqlLib="sql/" Log="log/" title="M04:MissingDataFile"/>
				<collector_interval>2,32</collector_interval>
				<repage>0</repage>
			</MissingDataFile>
			<WebAcpa2>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa2.pl</executable>
				<params title="ACPA2:M04"/>
				<repage>1</repage>
			</WebAcpa2>
			<WebAcpa3>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa3.pl</executable>
				<params title="ACPA3:M04"/>
				<repage>1</repage>
			</WebAcpa3>
			<WebListenGuideRate>
				<disable>yes</disable>
				<minutes>1,11,21,31,41,51</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebListenerGuidersRaters.pl
				</executable>
				<params title="WebListenGuideRate:M04"/>
				<repage>1</repage>
			</WebListenGuideRate>
			<WebFreeMinUsgErrs>
				<disable>yes</disable>
                                <usehours>yes</usehours>
				<minutes>2</minutes>
				<hours>0,2,4,6,8,10,12,14,16,18,20,22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebRollFreeMinutesUsageErrors.pl
				</executable>
				<params title="WebFreeMinUsgErrs:M04"/>
				<repage>1</repage>
			</WebFreeMinUsgErrs>
			<WebSpaceMb>
				<disable>yes</disable>
				<minutes>7</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebSpaceMb.pl</executable>
				<params title="WebSpaceMb:M04"/>
				<repage>1</repage>
			</WebSpaceMb>
			<WebStuckFileProc>
				<disable>yes</disable>
				<minutes>4,34</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebStuckFileProc.pl</executable>
				<params ignore_list="BROO,TULS,MANH,GRIS,QIS,STLO,COLK,VALD,TALH,GAIN,LARE,BEEV,ATOK,MOTS,HENR,WICH,FRPI,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMS,SMSC" title="M04:WebStuckFileProc"/>
				<repage>1</repage>
			</WebStuckFileProc>
		</M04>

		<M05 hostname="m05usg1.uscc.com" port="8999" StartHour="4"><TP_Summary>
				<disable>No</disable>
				<minutes>5</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/TP_Summary.pl</executable>
				<params title="TP_Summary" market="M05" sql_query="throughput.sql" SqlLib="sql/" Log="log/" seconds_span="3600" sum_dbuser="calldumptest" sum_dbpass="calldumptest" sum_dbsid="sharedev"/>
				<repage>1</repage>
			</TP_Summary>
			<!--
				SwitchBehind
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M05" sql_query="switch_behind.sql" ignore_list="QIS,AAA1,PMSG1,PTX1,SMS,ALU" threshold="12" MpsLib="" SqlLib="sql/" Log="log/" title="M05:SwitchBehind"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</SwitchBehind>

			<!--
				SwitchBehindPocaTwin
				This check is responsible for paging the oncall person when 
				Poca or Twin switches are behind.
				These switches have a separate check because they process
				data at different intervals and therefore need a different
				thresholds.
			-->
			<SwitchBehindPocaTwin>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M05" sql_query="switch_behind.sql" ignore_list="QIS,AAA1,PMSG1,PTX1,SMS,ALU" threshold="36" MpsLib="" SqlLib="sql/" Log="log/" title="M05:SwitchBehindPocaTwin"/>
				<collector_interval>1,31</collector_interval>
				<repage>0</repage>
			</SwitchBehindPocaTwin>

			<!--
				ProgremBehind
				This check is responsible for paging the oncall person when 
				a program is behind in processing by a threshold number of records.
			-->
			<ProgramBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/ProgramBehind.pl</executable>
				<params market="M05" sql_query="program_behind.sql" threshold="2000000" MpsLib="" SqlLib="sql/" Log="log/" title="M05:ProgramBehind"/>
				<collector_interval>3,33</collector_interval>
				<repage>1</repage>
			</ProgramBehind>
			<!--
				MissingBlock
				This check is responsible for paging the oncall person when 
				missing blocks of data are detected.
			-->
			<MissingBlock>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingBlock.pl</executable>
				<params market="M05" sql_query="missing_block.sql" switch_query="voice_switches.sql" from_hrs_ago="72" to_hrs_ago="1" threshold="100" MpsLib="" SqlLib="sql/" Log="log/" title="M05:MissingBlock"/>
				<collector_interval>4,34</collector_interval>
				<repage>0</repage>
			</MissingBlock>

			<!--
				StuckFile
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<StuckFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/StuckFile.pl</executable>
				<params market="M05" sql_query="stuck_file.sql" threshold="4" MpsLib="" SqlLib="sql/" Log="log/" title="M05:StuckFile"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</StuckFile>
			<!--
				MafMonitor
				This check is responsible for paging the oncall person when 
				the Maf Monitor ceases processing.
			-->
			<MafMonitor>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>4-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M05" host="localhost" maf_port="/cares/mpsm05b/m05/projs/up/physical/switch/MafPort.txt" MpsLib="" SqlLib="sql/" Log="log/" title="M05:MafMonitor"/>
				<executable>Monitor/MafMonitor.pl</executable>
				<collector_interval>1,31</collector_interval>
				<repage>1</repage>
			</MafMonitor>

			<!--
				MafAbends
				This check is responsible for paging the oncall person when 
				the number of abended files exceeds an allowed threshold.
			-->
			<MafAbends>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>1-5</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M05" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M05:MafAbends"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</MafAbends>

			<MafAbendsun>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours>
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>0,6</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M05" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M05:MafAbends"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</MafAbendsun>
			<!--
				RaterStatus
				This check is responsible for paging the oncall person when 
				any raters go down.
			-->
			<RaterStatus>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/RaterStatus.pl</executable>
				<params market="M05" night_start="4" night_end="13" sql_day="raters_day.sql" sql_night="raters_night.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M05:RaterStatus"/>
				<collector_interval>1,31,46,56</collector_interval>
				<repage>1</repage>
			</RaterStatus>
			<!--
				InfranetTransfer
				This check is responsible for paging the oncall person when 
				a data file transfer from CARES to Infranet fails.
			-->
			<InfraTransfer>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-18</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M05" from_hrs_ago="48" to_hrs_ago="2" cares_query="cares.sql" infra_query="infra.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M05:Infranet_Transfer"/>
				<executable>Monitor/InfraTransfer.pl</executable>
				<collector_interval>2,32</collector_interval>
				<repage>1</repage>
			</InfraTransfer>

			<IncollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M05" threshold="30" Log="log/" title="M05:IncollectCiber" phys_dir="/cares/mpsm05b/m05/projs/up/physical/switch/gte/"/>
				<executable>Monitor/IncollectCiber.pl</executable>
				<collector_interval>3,33</collector_interval>
				<repage>0</repage>
			</IncollectCiber>

			<OutcollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M05" threshold="24" alt_thresh="48" MpsLib="" SqlLib="sql/" Log="log/" title="M05:Outcollect_Ciber" phys_dir="/cares/mpsm05b/m05/projs/up/physical/switch/gteout/"/>
				<executable>Monitor/OutcollectCiber.pl</executable>
				<collector_interval>4,34</collector_interval>
				<repage>0</repage>
			</OutcollectCiber>
			<MissingDataFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>5-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingDataFile.pl</executable>
				<params market="M05" sql_query="missing_file.sql" switch_query="data_switches.sql" from_hrs_ago="72" to_hrs_ago="1" max_blocks="10000" ignore_list="BROO,TULS,MANH,GRIS,QIS,TWIN,POCA,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMSC,SMS,ALU" MpsLib="" SqlLib="sql/" Log="log/" title="M05:MissingDataFile"/>
				<collector_interval>0,45</collector_interval>
				<repage>0</repage>
			</MissingDataFile>
			<WebAcpa2>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa2.pl</executable>
				<params title="ACPA2:M05"/>
				<repage>1</repage>
			</WebAcpa2>
			<WebAcpa3>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa3.pl</executable>
				<params title="ACPA3:M05"/>
				<repage>1</repage>
			</WebAcpa3>
			<WebListenGuideRate>
				<disable>yes</disable>
				<minutes>2,7,12,17,22,27,32,37,42,47,52,57</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebListenerGuidersRaters.pl
				</executable>
				<params title="WebListenGuideRate:M05"/>
				<repage>1</repage>
			</WebListenGuideRate>
			<WebFreeMinUsgErrs>
				<disable>yes</disable>
                                <usehours>yes</usehours>
				<minutes>7</minutes>
				<hours>0,2,4,6,8,10,12,14,16,18,20,22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebRollFreeMinutesUsageErrors.pl
				</executable>
				<params title="WebFreeMinUsgErrs:M05"/>
				<repage>1</repage>
			</WebFreeMinUsgErrs>
			<WebSpaceMb>
				<disable>yes</disable>
				<minutes>3,33</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebSpaceMb.pl</executable>
				<params title="WebSpaceMb:M05"/>
				<repage>1</repage>
			</WebSpaceMb>
			<WebStuckFileProc>
				<disable>yes</disable>
				<minutes>4,34</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebStuckFileProc.pl</executable>
				<params ignore_list="BROO,TULS,MANH,GRIS,QIS,AAA,AAA1,AAA2,AAA3,PMSG1,PMSG2,PMSG3,PTX1,PTX2,PTX3,SMSC,QISS,POCA,TWIN,SMS" title="M05:WebStuckFileProc"/>
				<repage>1</repage>
			</WebStuckFileProc>
		</M05>


		<M06 hostname="m06usg1.uscc.com" port="8999" StartHour="6"><TP_Summary>
				<disable>No</disable>
				<minutes>5</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/TP_Summary.pl</executable>
				<params title="TP_Summary" market="M06" sql_query="throughput.sql" SqlLib="sql/" Log="log/" seconds_span="3600" sum_dbuser="calldumptest" sum_dbpass="calldumptest" sum_dbsid="sharedev"/>
				<repage>1</repage>
			</TP_Summary>
			<!--
				SwitchBehind
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M06" sql_query="switch_behindNonCBB.sql" ignore_list="MOT" threshold="8" MpsLib="" SqlLib="sql/" Log="log/" title="M06:SwitchBehindNonCBB"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</SwitchBehind>
			
			<SwitchBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/SwitchBehind.pl</executable>
				<!-- 
					The ignore_list parameter contains a comma-delimited list of 
					switches that are to be ignored by the paging mechanism. 
					If a switch is followed by a colon and a string of digits, 
					the switch will be ignored only on the days specified by the digits.  
					The integer digits signify days of week starting with 0=Sunday.  
					So, for instance, if you want switch SWITCH to be ignored on Sunday 
					and Wednesday, but page on the rest of the days of the week, 
					the entry would be: 
					ignore_list="SWITCH:03"
				-->
				<params market="M06" sql_query="switch_behindCBB.sql" threshold="24" MpsLib="" SqlLib="sql/" Log="log/" title="M06:SwitchBehindCBB"/>
				<collector_interval>5,35</collector_interval>
				<repage>1</repage>
			</SwitchBehind>

			<!--
				ProgramBehind
				This check is responsible for paging the oncall person when 
				a program is behind in processing by a threshold number of records.
			-->
			<ProgramBehind>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/ProgramBehind.pl</executable>
				<params market="M06" sql_query="program_behind.sql" threshold="5000000" MpsLib="" SqlLib="sql/" Log="log/" title="M06:ProgramBehind"/>
				<collector_interval>1,31</collector_interval>
				<repage>1</repage>
			</ProgramBehind>
			<!--
				MissingBlock
				This check is responsible for paging the oncall person when 
				missing blocks of data are detected.
			-->
			<MissingBlock>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingBlock.pl</executable>
				<params market="M06" sql_query="missing_block.sql" switch_query="voice_switches.sql" from_hrs_ago="72" to_hrs_ago="1" threshold="100" MpsLib="" SqlLib="sql/" Log="log/" title="M06:MissingBlock"/>
				<collector_interval>2,32</collector_interval>
				<repage>0</repage>
			</MissingBlock>

			<!--
				StuckFile
				This check is responsible for paging the oncall person when 
				files stuck in usage are detected.
			-->
			<StuckFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/StuckFile.pl</executable>
				<params market="M06" sql_query="stuck_file.sql" threshold="4" MpsLib="" SqlLib="sql/" Log="log/" title="M06:StuckFile"/>
				<collector_interval>3,33</collector_interval>
				<repage>1</repage>
			</StuckFile>
			<!--
				MafMonitor
				This check is responsible for paging the oncall person when 
				the Maf Monitor ceases processing.
			-->
			<MafMonitor>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>4-23</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M06" host="localhost" maf_port="/cares/mpsm06b/m06/projs/up/physical/switch/MafPort.txt" MpsLib="" SqlLib="sql/" Log="log/" title="M06:MafMonitor"/>
				<executable>Monitor/MafMonitor.pl</executable>
				<collector_interval>4,34</collector_interval>
				<repage>1</repage>
			</MafMonitor>

			<!--
				MafAbends
				This check is responsible for paging the oncall person when 
				the number of abended files exceeds an allowed threshold.
			-->
			<MafAbends>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>1-5</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M06" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M06:MafAbends"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</MafAbends>

			<MafAbendsun>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours>
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,6</dayofweek>
				<month>*</month>
				<!-- Path (relative to <MpsLib>) to the audit executable -->
				<executable>Monitor/MafAbends.pl</executable>
				<params market="M06" sql_query="MafAbends.sql" alarm_threshold="10" MpsLib="" SqlLib="sql/" Log="log/" title="M06:MafAbends"/>
				<collector_interval>0,30</collector_interval>
				<repage>1</repage>
			</MafAbendsun>
			<!--
				RaterStatus
				This check is responsible for paging the oncall person when 
				any raters go down.
			-->
			<RaterStatus>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/RaterStatus.pl</executable>
				<params market="M06" night_start="4" night_end="13" sql_day="raters_day.sql" sql_night="raters_night.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M06:RaterStatus"/>
				<collector_interval>1,31,46,56</collector_interval>
				<repage>1</repage>
			</RaterStatus>
			<!--
				InfranetTransfer
				This check is responsible for paging the oncall person when 
				a data file transfer from CARES to Infranet fails.
			-->
			<InfraTransfer>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-20</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<params market="M06" from_hrs_ago="48" to_hrs_ago="2" cares_query="cares.sql" infra_query="infra.sql" MpsLib="" SqlLib="sql/" Log="log/" title="M06:Infranet_Transfer"/>
				<executable>Monitor/InfraTransfer.pl</executable>
				<collector_interval>2,32</collector_interval>
				<repage>1</repage>
			</InfraTransfer>

			<IncollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M06" threshold="30" Log="log/" title="M06:IncollectCiber" phys_dir="/cares/mpsm06b/m06/projs/up/physical/switch/gte/"/>
				<executable>Monitor/IncollectCiber.pl</executable>
				<collector_interval>3,33</collector_interval>
				<repage>0</repage>
			</IncollectCiber>

			<OutcollectCiber>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>0,2,3,4,5,6</dayofweek>
				<month>*</month>
				<params market="M06" threshold="24" alt_thresh="48" MpsLib="" SqlLib="sql/" Log="log/" title="M06:Outcollect_Ciber" phys_dir="/cares/mpsm06b/m06/projs/up/physical/switch/gteout/"/>
				<executable>Monitor/OutcollectCiber.pl</executable>
				<collector_interval>4,34</collector_interval>
				<repage>0</repage>
			</OutcollectCiber>
			<MissingDataFile>
				<disable>No</disable>
				<!--
					The following 5 tags tell the monitor when it should run the
					check.  The method is similar to the Unix CRON.  
					Thus, for instance the setting:
					"   <minutes>5,23</minutes>
					<hours>3,5,19</hours> 
					<days>1-25</days>
					<dayofweek>*</dayofweek>
					<month>*</month>           "
					results in the check being performed every day of the month,
					on any day of the week, but only on days of month 1st through
					the 25th, at 3:05 AM, 3:23 AM, 5:05 AM, 5:23 AM, 7:05 PM, and
					7:23 PM.
				-->
				<minutes>0</minutes>
				<hours>7-22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/MissingDataFile.pl</executable>
				<params market="M06" sql_query="missing_file.sql" switch_query="data_switches.sql" from_hrs_ago="120" to_hrs_ago="-6" max_blocks="10000" ignore_list="BROO,TULS,MANH,GRIS,QIS,AAA,AAA2,AAA3,AAAS2,AAAS3,PMSG2,PMSG3,PMSS2,PMSS3,PTX2,PTX3,PTS2,PTS3,SMSC,MOT" MpsLib="" SqlLib="sql/" Log="log/" title="M06:MissingDataFile"/>
				<collector_interval>0,30</collector_interval>
				<repage>0</repage>
			</MissingDataFile>
			<WebAcpa2>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa2.pl</executable>
				<params title="ACPA2:M06"/>
				<repage>1</repage>
			</WebAcpa2>
			<WebAcpa3>
				<disable>yes</disable>
				<minutes>
					2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59
				</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/acpa3.pl</executable>
				<params title="ACPA3:M06"/>
				<repage>1</repage>
			</WebAcpa3>
			<WebListenGuideRate>
				<disable>yes</disable>
				<minutes>1,11,21,31,41,51</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebListenerGuidersRaters.pl
				</executable>
				<params title="WebListenGuideRate:M06"/>
				<repage>1</repage>
			</WebListenGuideRate>
			<WebFreeMinUsgErrs>
				<disable>yes</disable>
                                <usehours>yes</usehours>
				<minutes>2</minutes>
				<hours>0,2,4,6,8,10,12,14,16,18,20,22</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>
					Monitor/WebRollFreeMinutesUsageErrors.pl
				</executable>
				<params title="WebFreeMinUsgErrs:M06"/>
				<repage>1</repage>
			</WebFreeMinUsgErrs>
			<WebSpaceMb>
				<disable>yes</disable>
				<minutes>7</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebSpaceMb.pl</executable>
				<params title="WebSpaceMb:M06"/>
				<repage>1</repage>
			</WebSpaceMb>
			<WebStuckFileProc>
				<disable>yes</disable>
				<minutes>3,33</minutes>
				<hours>*</hours>
				<days>*</days>
				<dayofweek>*</dayofweek>
				<month>*</month>
				<executable>Monitor/WebStuckFileProc.pl</executable>
				<params ignore_list="BROO,TULS,MANH,GRIS,QIS,LOM1,AAA,AAA2,AAA3,AAAS2,AAAS3,PMSG2,PMSG3,PMSS2,PMSS3,PTX1,PTX2,PTX3,PTS2,PTS3,SMS,WTRL" title="M06:WebStuckFileProc"/>
				<repage>1</repage>
			</WebStuckFileProc>
		</M06>


	</MARKET>
</monitor>