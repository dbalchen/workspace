"/home/dbalchen/workspace/SuperCollider/drumSampler.sc".loadPath;

~allTimes = [2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,2.0,1.5,1.0,1.0,0.5,0.5,0.5,0.5,0.5,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,1.0,1.0,0.5,1.0,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,2.0,1.5,1.0,1.0,0.5,0.5,0.5,0.5,0.5,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,1.0,1.0,0.5,1.0,0.5,0.5,1.5,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,2.0,1.5,1.0,1.0,0.5,0.5,0.5,0.5,0.5,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,1.0,1.0,0.5,1.0,0.5,0.5,0.5,1.0,0.5,0.5,1.0,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,2.0,1.5,1.0,1.0,0.5,0.5,0.5,0.5,0.5,2.0,1.5,1.0,1.0,0.5,0.5,0.5,1.0,1.0,1.0,0.5,1.0,0.5,0.5,0.5,1.0,0.5,0.5,1.0,320.0]; 


~snare = MyEvents.new;
~snare.amp = 0.8;
~snare.waits = ~allTimes.deepCopy;
~snare.freqs = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,0,0,0,38,0,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,38,0,0,38,0,0,0,38,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
~snare.probs = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
~snare.durations = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.5,0,0,0,1.5,0,0,2.0,0,0,0,1.0,0,0,0,2.0,0,0,0,1.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,0,0,0,2.0,0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,2.0,0,0,0,2.0,0,0,0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
~snare.init;
~snare.filter.attack = 0.0;
~snare.filter.release = 0.50;
~snare.filter.cutoff = 10000;
~snare.filter.gain = 0.0;
~snare.filter.sustain = 1.0;
~snare.filter.aoc = 1;
~snare.envelope.attack = 0.0;
~snare.envelope.release = 0.50;
~snare.envelope.decay = 1.5;
~snare.envelope.sustain = 0.0;

~bassd =  MyEvents.new;
~bassd.amp = 1.0;
~bassd.waits = ~allTimes.deepCopy;
~bassd.freqs = [36,0,36,0,0,36,0,0,36,0,36,0,0,36,0,0,0,36,0,36,0,0,36,0,0,36,0,0,0,0,36,0,0,36,0,0,0,36,0,36,0,0,36,0,0,36,0,36,0,0,36,0,0,0,36,0,36,0,0,36,0,0,36,0,0,0,0,36,0,0,36,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,0,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,36,36,0,0,36,36,0,0,0,36,0,0,36,36,0,36,36,0,0,0,0,36,0,0,0,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,0,36,36,0,0,36,0,0,36,36,0,0,0,36,0,36,0,0,36,0,0,36,0,36,0,0,36,0,0,0,36,0,36,0,0,36,0,0,36,0,0,0,0,36,0,0,36,0,0,36,0,36,0,0,36,0,0,36,0,36,0,0,36,0,0,0,36,0,36,0,0,36,0,0,36,0,0,0,0,36,0,0,36,0,0,36];
~bassd.probs = [1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1];
~bassd.durations = [2.0,0,0.5,0,0,1.5,0,0,3.0,0,0.5,0,0,1.5,0,0,0,3.0,0,0.5,0,0,1.5,0,0,3.5,0,0,0,0,1.5,0,0,1.5,0,0,0,2.0,0,0.5,0,0,1.5,0,0,3.0,0,0.5,0,0,1.5,0,0,0,2.0,0,0.5,0,0,1.5,0,0,1.0,0,0,0,0,2.5,0,0,1.0,2.0,0,0,1.0,2.0,0,0,2.0,0,0,0.5,2.0,0,0,0,2.0,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,3.5,0,0,0,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,2.5,0,0.5,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,2.5,0,0.5,3.5,0,0,0,0,3.5,0,0,0,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,2.5,0,0,0.5,3.5,0,0,2.5,0,0,0.5,3.5,0,0,0,3.0,0,0.5,0,0,1.5,0,0,3.0,0,0.5,0,0,1.5,0,0,0,3.0,0,0.5,0,0,1.5,0,0,3.5,0,0,0,0,1.5,0,0,1.5,0,0,3.0,0,0.5,0,0,1.5,0,0,3.0,0,0.5,0,0,1.5,0,0,0,3.0,0,0.5,0,0,1.5,0,0,3.5,0,0,0,0,1.5,0,0,2.0,0,0,3.5];

~bassd.init;
~bassd.filter.attack = 0.0;
~bassd.filter.release = 4.0;
~bassd.filter.cutoff = 8000;
~bassd.filter.gain = 0.2;
~bassd.filter.sustain = 1.0;
~bassd.filter.aoc = 1;
~bassd.envelope.attack = 0.0;
~bassd.envelope.release = 0.250;
~bassd.envelope.decay = 0.50;
~bassd.envelope.sustain = 0.0;


~fadein =  (Array.fill(15, { arg i; (((i*i)/15)/13);}));
~fadeout =  Array.fill(15, { arg i; i = i-15;(((i*i)/225 )) ;} );

~tom1 = MyEvents.new;
~tom1.amp = 0.8;
~tom1.waits = ~allTimes.deepCopy;
~tom1.freqs = [0,47,0,47,43,0,41,47,0,47,0,47,43,0,41,47,43,0,47,0,47,43,0,41,47,0,41,47,43,41,0,47,41,0,41,47,43,0,47,0,47,43,0,41,47,0,47,0,47,43,0,41,47,43,0,47,0,47,43,0,41,47,0,41,47,43,43,0,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,43,41,0,47,41,43,0,41,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,0,47,43,0,41,47,0,47,0,47,43,0,41,47,43,0,47,0,47,43,0,41,47,0,41,47,43,41,0,47,41,0,41,47,0,47,0,47,43,0,41,47,0,47,0,47,43,0,41,47,43,0,47,0,47,43,0,41,47,0,41,47,43,41,0,47,41,0,41,47,0];
~tom1.probs = [0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,0,1,1,0];
~tom1.durations = [0,1.5,0,1.0,1.0,0,1.0,0.93,0,1.5,0,1.0,1.0,0,0.5,0.5,0.5,0,1.5,0,2.0,1.0,0,1.0,0.93,0,1.0,0.5,1.0,0.43,0,0.5,1.0,0,0.5,0.5,0.5,0,1.5,0,1.0,0.5,0,0.5,0.93,0,1.5,0,1.0,1.0,0,0.5,0.5,0.5,0,1.5,0,1.0,0.5,0,0.5,0.93,0,1.0,0.5,1.0,0.5,0,1.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.5,0,1.0,0.43,0,0.5,0.5,1.0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.5,0,1.0,1.0,0,0.5,0.93,0,1.5,0,1.0,1.0,0,0.5,0.5,0.5,0,1.5,0,1.0,1.0,0,0.5,0.93,0,1.0,0.5,1.0,0.43,0,0.5,0.5,0,0.5,0.5,0,1.5,0,1.0,1.0,0,0.5,0.94,0,1.5,0,1.0,1.0,0,0.5,0.5,0.5,0,1.5,0,1.0,1.0,0,0.5,0.93,0,1.0,0.5,1.0,0.43,0,0.5,0.5,0,0.5,0.5,0];

~tom1.init;
~tom1.filter.attack = 0.0;
~tom1.filter.release = 4.0;
~tom1.filter.cutoff = 8000;
~tom1.filter.gain = 0.0;
~tom1.filter.sustain = 1.0;
~tom1.filter.aoc = 1;
~tom1.envelope.attack = 0.0;
~tom1.envelope.release = 8.0;
~tom1.envelope.decay = 0.0;
~tom1.envelope.sustain = 1.0;



~tom2 = MyEvents.new;
~tom2.amp = 0.8;
~tom2.init;
~tom2.filter.attack = 0.0;
~tom2.filter.release = 4.0;
~tom2.filter.cutoff = 8000;
~tom2.filter.gain = 0.0;
~tom2.filter.sustain = 1.0;
~tom2.filter.aoc = 1;
~tom2.envelope.attack = 0.0;
~tom2.envelope.release = 8.0;
~tom2.envelope.decay = 0.0;
~tom2.envelope.sustain = 1.0;


~tom3 = MyEvents.new;
~tom3.amp = 0.8;
~tom3.init;
~tom3.filter.attack = 0.0;
~tom3.filter.release = 4.0;
~tom3.filter.cutoff = 8000;
~tom3.filter.gain = 0.0;
~tom3.filter.sustain = 1.0;
~tom3.filter.aoc = 1;
~tom3.envelope.attack = 0.0;
~tom3.envelope.release = 8.0;
~tom3.envelope.decay = 0.0;
~tom3.envelope.sustain = 1.0;


~ride = MyEvents.new;
~ride.amp = 10.0;
~ride.waits = ~allTimes.deepCopy;
~ride.freqs = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,59,0,59,59,0,59,0,59,0,59,0,59,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
~ride.probs = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
~ride.durations = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0,0,1.0,1.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,1.0,2.0,0,1.0,0,2.0,0,0.5,0,1.5,0,1.0,0,1.5,0,1.0,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,1.0,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,1.0,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,0.5,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,0.5,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,0.5,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,0.5,2.5,0,1.0,0,2.0,0,1.0,0,1.0,0,1.0,0,1.0,0,0.5,2.5,0,1.0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0,0,0.5,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,1.0,0,0.5,2.5,0,1.0,0,1.5,0,1.0,0,1.0,0,1.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] * 4;

~ride.init;
~ride.filter.attack = 0.010;
~ride.filter.release = 4.0;
~ride.filter.cutoff = 12000;
~ride.filter.gain = 3.0;
~ride.filter.sustain = 1.0;
~ride.filter.aoc = 0.75;
~ride.envelope.attack = 0.01;
~ride.envelope.release = 8.0;
~ride.envelope.decay = 0.0;
~ride.envelope.sustain = 1.0;



~crash = MyEvents.new;
~crash.amp = 2.0;
~crash.waits = [224.0,320.0]; 
~crash.freqs = [0,49];
~crash.probs = [0,1];
~crash.durations = [0,8.0];
~crash.init;
~crash.filter.attack = 0.0;
~crash.filter.release = 4.0;
~crash.filter.cutoff = 15000;
~crash.filter.gain = 3.0;
~crash.filter.sustain = 1.0;
~crash.filter.aoc = 0;
~crash.envelope.attack = 0.50;
~crash.envelope.release = 8.0;
~crash.envelope.decay = 0.0;
~crash.envelope.sustain = 1.0;


~midiBassDrum = {Pbind(\type, \midi,
		       \midiout, ~synth1,
		       \midicmd, \noteOn,
		       \note,  Pfunc.new({~bassd.freq.next}- 60),
		       \amp, ~bassd.amp,
		       \chan, 9,
		       \sustain, Pfunc.new({~bassd.duration.next}),
		       \dur, Pfunc.new({~bassd.wait.next})
		       ).play};

~midiSnare = {Pbind(\type, \midi,
		    \midiout, ~synth1,
		    \midicmd, \noteOn,
		    \note,  Pfunc.new({~snare.freq.next}- 60),
		    \amp, ~snare.amp,
		    \chan, 9,
		    \sustain, Pfunc.new({~snare.duration.next}),
		    \dur, Pfunc.new({~snare.wait.next})
		    ).play};

~midiToms = {Pbind(\type, \midi,
		   \midiout, ~synth1,
		   \midicmd, \noteOn,
		   \note,  Pfunc.new({~tom1.freq.next}- 60),
		   \amp, ~tom1.amp,
		   \chan, 9,
		   \sustain, Pfunc.new({~tom1.duration.next}),
		   \dur, Pfunc.new({~tom1.wait.next})
		   ).play};

~midiCyms = {Pbind(\type, \midi,
		   \midiout, ~synth1,
		   \midicmd, \noteOn,
		   \note,  Pfunc.new({~ride.freq.next}- 60),
		   \amp, ~ride.amp,
		   \chan, 9,
		   \sustain, Pfunc.new({~ride.duration.next}),
		   \dur, Pfunc.new({~ride.wait.next})
		   ).play};

~midiCrash = {Pbind(\type, \midi,
		   \midiout, ~synth1,
		   \midicmd, \noteOn,
		   \note,  Pfunc.new({~crash.freq.next}- 60),
		   \amp, ~crash.amp,
		   \chan, 9,
		   \sustain, Pfunc.new({~crash.duration.next}),
		   \dur, Pfunc.new({~crash.wait.next})
		   ).play};


~channel9 = {arg num, vel = 1;
	     var ret, amp = 2, drum, rate = 1.0;

	     num.postln;

	     drum = ~snare;
	     
	       if((num == 36),{drum = ~bassd;});
	       if((num == 38),{drum = ~snare;});
	       if((num == 41),{drum = ~tom1;});
	       if((num == 43),{drum = ~tom2;});
	       if((num == 47),{drum = ~tom3;});
	       if((num == 49),{drum = ~crash;});
	       if((num == 59),{drum = ~ride; rate = 1.10});
	     amp = drum.amp;
	     drum.amp = amp * vel;
	     ret = ~midiDrum.value(drum,num,rate);
	     drum.amp = amp; rate = 1.0;
   
	     ret;
};




~roleOn  = {~tom1.amp = 1;~tom2.amp = 1;~tom3.amp = 1};
~roleOff = {~tom1.amp = 0;~tom2.amp = 0;~tom3.amp = 0};
